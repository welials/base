import array

"""
array.byteswap():
Метод array.byteswap() меняет порядок байтов каждого элемента в массиве . 
Метод поддерживает только значения размером 1, 2, 4 или 8 байт. 
Для других типов значений вызывается исключение RuntimeError.

Метод array.byteswap() полезно использовать при чтении данных из файла, 
записанного на машине с другим порядком байтов.
"""

arr = array.array('i', range(4))
print(arr)
# array('i', [0, 1, 2, 3])

arr.byteswap()
print(arr)
# array('i', [0, 16777216, 33554432, 50331648])
"""
array.count(x):
Метод array.count() вернет количество вхождений аргумента x в массиве array.
"""
arr = array.array('i', range(4))
arr.extend([1,1])
print(arr.count(1))
# 3

print(arr)
# array('i', [0, 1, 2, 3, 1, 1])

"""
array.extend(iterable):
Метод array.extend() добавляет элементы из итерируемого объекта iterable в конец массива array.

Если iterable - это другой массив array, он должен иметь точно такой же typecode. 
Если typecode другой, то появится исключение TypeError. 
Если iterable не является массивом array, то он должен быть повторяемым,
а его элементы должны иметь правильный тип для добавления в массив.
"""
arr = array.array('i', range(4))
arr.extend([10,11])
print(arr)
# array('i', [0, 1, 2, 3, 10, 11])
"""
array.frombytes(s):
Метод array.frombytes() добавляет элементы из строки, интерпретируя строку как массив машинных значений. 
Как если бы она была прочитана из файла с помощью метода array.fromfile().
"""

arr = array.array('i', range(4))
line = arr.tobytes()
print(line)
# b'\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00'

arr1 = array.array('i')
arr1.frombytes(line)
print(arr1)
# array('i', [0, 1, 2, 3])
"""
array.fromfile(fp, n):
Метод array.fromfile() считывает n элементов (как машинные значения) из файлового объекта fp и 
добавляет их в конец массива.

Если доступно менее n элементов, вызывается исключение EOFError, 
но при этом доступные элементы вставляются в массив. Аргумент fp должен быть настоящим файловым объектом. 
Для чтения массива из фала метод file.read() не подойдет.
Смотрите пример использования в разделе "Сохранение/чтение массива array() в/из файл(а)".
array.fromlist(list):

Метод array.fromlist() добавляет элементы массив array из списка list. 
Это эквивалентно добавлению x в список array.append(x), 
за исключением того, что в случае ошибки типа массив array не изменяется.
"""

arr = array.array('i', range(2))
arr.fromlist([10,20,30,40])
print(arr)
# array('i', [0, 1, 10, 20, 30, 40])
